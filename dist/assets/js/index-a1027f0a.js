import{d as G,A as H,B as M,C as P,D as R,E as T,G as n,r as W,c,H as U,w as $,o as q,b as F,y as J,z as K}from"./index-9844670a.js";const N=G({name:"AGrid"}),Q=G({...N,props:{cols:{default:()=>({xs:1,sm:2,md:2,lg:3,xl:4})},collapsed:{type:Boolean,default:!1},collapsedRows:{default:1},gap:{default:0}},setup(I,{expose:L}){var v,m;const a=I;H(()=>a.collapsed&&u()),M(()=>{i({target:{innerWidth:window.innerWidth}}),window.addEventListener("resize",i)}),P(()=>{i({target:{innerWidth:window.innerWidth}}),window.addEventListener("resize",i)}),R(()=>{window.removeEventListener("resize",i)}),T(()=>{window.removeEventListener("resize",i)});const i=l=>{let e=l.target.innerWidth;switch(!!e){case e<768:o.value="xs";break;case(e>=768&&e<992):o.value="sm";break;case(e>=992&&e<1200):o.value="md";break;case(e>=1200&&e<1920):o.value="lg";break;case e>=1920:o.value="xl";break}};n("gap",Array.isArray(a.gap)?a.gap[0]:a.gap);let o=W("xl");n("breakPoint",o);const d=W(-1);n("shouldHiddenIndex",d);const r=c(()=>typeof a.cols=="object"?a.cols[o.value]??a.cols:a.cols);n("cols",r);const f=(m=(v=U()).default)==null?void 0:m.call(v),u=()=>{var g,w,h,x,b,A;let l=[],e=null;f==null||f.forEach(t=>{var p;typeof t.type=="object"&&t.type.name==="AGridItem"&&((p=t.props)==null?void 0:p.suffix)!==void 0&&(e=t),typeof t.type=="symbol"&&Array.isArray(t.children)&&t.children.forEach(s=>l.push(s))});let y=0;e&&(y=(((w=(g=e.props)==null?void 0:g[o.value])==null?void 0:w.span)??((h=e.props)==null?void 0:h.span)??1)+(((b=(x=e.props)==null?void 0:x[o.value])==null?void 0:b.offset)??((A=e.props)==null?void 0:A.offset)??0));try{let t=!1;l.reduce((p=0,s,D)=>{var k,E,z,_,C,B;if(p+=(((E=(k=s==null?void 0:s.props)==null?void 0:k[o.value])==null?void 0:E.span)??((z=s==null?void 0:s.props)==null?void 0:z.span)??1)+(((C=(_=s==null?void 0:s.props)==null?void 0:_[o.value])==null?void 0:C.offset)??((B=s==null?void 0:s.props)==null?void 0:B.offset)??0),p>a.collapsedRows*r.value-y)throw d.value=D,t=!0,"find it";return p},0),t||(d.value=-1)}catch{}};$(()=>o.value,()=>{a.collapsed&&u()}),$(()=>a.collapsed,l=>{if(l)return u();d.value=-1});const S=c(()=>typeof a.gap=="number"?`${a.gap}px`:Array.isArray(a.gap)?`${a.gap[1]}px ${a.gap[0]}px`:"unset"),j=c(()=>({display:"grid",gridGap:S.value,gridTemplateColumns:`repeat(${r.value}, minmax(0, 1fr))`}));return L({breakPoint:o}),(l,e)=>(q(),F("div",{style:K(j.value)},[J(l.$slots,"default")],4))}});export{Q as default};
