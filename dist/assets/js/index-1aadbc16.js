import{d as c,u as x,r as l,k as n,w as $,c as g,v as h,x as _,o as k,b as w,y,z as S}from"./index-9844670a.js";const b=c({name:"AGridItem"}),I=c({...b,props:{offset:{default:0},span:{default:1},suffix:{type:Boolean,default:!1},xs:{default:void 0},sm:{default:void 0},md:{default:void 0},lg:{default:void 0},xl:{default:void 0}},setup(p){const a=p,u=x(),d=l(!0),o=n("breakPoint",l("xl")),v=n("shouldHiddenIndex",l(-1));$(()=>[v.value,o.value],e=>{u.index&&(d.value=!(e[0]!==-1&&parseInt(u.index)>=Number(e[0])))},{immediate:!0});const r=n("gap",0),s=n("cols",l(4)),m=g(()=>{var i,f;let e=((i=a[o.value])==null?void 0:i.span)??a.span,t=((f=a[o.value])==null?void 0:f.offset)??a.offset;return a.suffix?{gridColumnStart:s.value-e-t+1,gridColumnEnd:`span ${e+t}`,marginLeft:t!==0?`calc(((100% + ${r}px) / ${e+t}) * ${t})`:"unset"}:{gridColumn:`span ${e+t>s.value?s.value:e+t}/span ${e+t>s.value?s.value:e+t}`,marginLeft:t!==0?`calc(((100% + ${r}px) / ${e+t}) * ${t})`:"unset"}});return(e,t)=>h((k(),w("div",{style:S(m.value)},[y(e.$slots,"default")],4)),[[_,d.value]])}});export{I as default};
